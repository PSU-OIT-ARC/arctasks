[DEFAULT]
; NOTE: Values must be valid JSON

; Meta
_invoke.version = "0.11.1"
; This must be set per project
package = null
distribution = "{package}"

; Local
venv = ".env"
bin.dir = "{venv}/bin"
bin.python = "{bin.dir}/python"
bin.pip = "{bin.dir}/pip"
requirements = "requirements.txt"

; Local paths
path.build.root = "{cwd}/build/{version}"
path.build.dist = "{path.build.root}/dist"

; Django
django_settings_module = "{package}.settings"
local_settings_file = "local.{env}.cfg"

; Database
db.type = "postgresql"
db.host = "localhost"
db.user = "{current_user}"
db.name = "{package}"

service.user = "{current_user}"
service.group = ""

; Remote connection info

; User to connect as
remote.user = "{current_user}"
remote.host = "hrimfaxi.oit.pdx.edu"
; User to run commands as using `sudo -u`
remote.run_as = "{service.user}"
remote.extra_path = "/usr/pgsql-9.4/bin"

; Remote paths

; Project root directory
remote.path.root = "/vol/www/{package}"
; Pointer to active build for env (stage, prod)
remote.path.env = "{remote.path.root}/{env}"
; Media and static directories for env
remote.path.media = "/vol/www/{package}/media/{env}"
remote.path.static = "/vol/www/{package}/static/{env}"

; Build root for env; contains all the builds for an env
remote.build.root = "{remote.path.root}/builds/{env}"
; Where the current build will be built and what remote.path.env will end up pointing at
remote.build.dir = "{remote.build.root}/{version}"
remote.build.local_settings_file = "{remote.build.dir}/local.cfg"
; Virtualenv for build
remote.build.venv = "{remote.build.dir}/.env"
remote.build.bin = "{remote.build.venv}/bin"
remote.build.pip = "{remote.build.bin}/pip"
remote.build.python = "{remote.build.bin}/python"
; Source distributions for build
remote.build.dist = "{remote.build.dir}/dist"
remote.build.manage_template = "arctasks:templates/manage.py.template"
remote.build.manage = "{remote.build.dir}/manage.py"
remote.build.wsgi_dir = "{remote.build.dir}/wsgi"

; Pip root directory for env
remote.pip.root = "{remote.path.root}/pip/{env}"
; Shared pip cache for env
remote.pip.download_cache = "{remote.pip.root}/download-cache"
; Shared pip wheel dir for env
remote.pip.wheel_dir = "{remote.pip.root}/wheelhouse"
; ARC's local package index
remote.pip.find_links = "file:///vol/www/cdn/pypi/dist"

[stage]
db.host = "merope.rc.pdx.edu"
db.user = "{package}_stage_l"
db.name = "{package}_stage"

[prod]
db.host = "postgresql.rc.pdx.edu"
db.user = "{package}_l"
db.name = "{package}"

[vagrant]
remote.host = "10.0.0.10"
service.user = "vagrant"
service.group = "apache"
